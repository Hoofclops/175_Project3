<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "Renderer::DrawPoint(Point):Renderer.cpp">
         <PersistentStrings>
            <PersistentString
               value = "point">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Renderer::NormalizeVertices(std::__1::deque&lt;Point, std::__1::allocator&lt;Point&gt; &gt;, std::__1::deque&lt;float, std::__1::allocator&lt;float&gt; &gt;*, std::__1::deque&lt;float, std::__1::allocator&lt;float&gt; &gt;*, Vector2i, Vector2i):Renderer.cpp">
         <PersistentStrings>
            <PersistentString
               value = "i">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::FillRemainingEdges(std::__1::deque&lt;Line, std::__1::allocator&lt;Line&gt; &gt;, std::__1::list&lt;GraphicsAlgorithm::ScanData, std::__1::allocator&lt;GraphicsAlgorithm::ScanData&gt; &gt;*):GraphicsAlgorithm.cpp">
         <PersistentStrings>
            <PersistentString
               value = "i">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Renderer::NormalizeVertices(std::__1::deque&lt;Point, std::__1::allocator&lt;Point&gt; &gt;, std::__1::deque&lt;float, std::__1::allocator&lt;float&gt; &gt;*, std::__1::deque&lt;float, std::__1::allocator&lt;float&gt; &gt;*, float, float):Renderer.cpp">
         <PersistentStrings>
            <PersistentString
               value = "vertices">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Renderer::DrawLine(Line, Renderer::Algo):Renderer.cpp">
      </ContextState>
      <ContextState
         contextName = "Renderer::DrawPolygon(Polygon):Renderer.cpp">
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::LineClipCohenSutherland(Vector2i, Vector2i, Line*):GraphicsAlgorithm.cpp">
      </ContextState>
      <ContextState
         contextName = "Polygon::GetEdges():Polygon.cpp">
      </ContextState>
      <ContextState
         contextName = "Polygon::Polygon(std::__1::vector&lt;Vector2i, std::__1::allocator&lt;Vector2i&gt; &gt;):Polygon.cpp">
         <PersistentStrings>
            <PersistentString
               value = "mVertices">
            </PersistentString>
            <PersistentString
               value = "mEdges">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Renderer::DrawPolygons():Renderer.cpp">
         <PersistentStrings>
            <PersistentString
               value = "j">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Matrix::MultiplyVector(Vector3):Matrix.cpp">
         <PersistentStrings>
            <PersistentString
               value = "mRows">
            </PersistentString>
            <PersistentString
               value = "mCols">
            </PersistentString>
            <PersistentString
               value = "other.mCols">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ObjectManager::CreatePolygon(std::__1::vector&lt;Vector2i, std::__1::allocator&lt;Vector2i&gt; &gt;):ObjectManager.cpp">
      </ContextState>
      <ContextState
         contextName = "Line::Line(Point*, Point*):Line.cpp">
      </ContextState>
      <ContextState
         contextName = "Polygon::GetEdges2d(std::__1::deque&lt;Point, std::__1::allocator&lt;Point&gt; &gt;):Polygon.cpp">
      </ContextState>
      <ContextState
         contextName = "Matrix::Matrix(int, int):Matrix.cpp">
         <PersistentStrings>
            <PersistentString
               value = "mMatrix">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Renderer::MapToPlaneQuadrant(std::__1::deque&lt;Point, std::__1::allocator&lt;Point&gt; &gt;*, Renderer::ProjectionPlane, Vector2i, Vector2i):Renderer.cpp">
         <PersistentStrings>
            <PersistentString
               value = "plane">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::InitScanLineValues(Line, GraphicsAlgorithm::ScanData*):GraphicsAlgorithm.cpp">
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::PolygonClipSutherlandHodgman(Vector2i, Vector2i, Polygon, Vector2i*):GraphicsAlgorithm.cpp">
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::Intersect(Vector2i, Vector2i, GraphicsAlgorithm::Boundary, Vector2i, Vector2i):GraphicsAlgorithm.cpp">
         <PersistentStrings>
            <PersistentString
               value = "(p1.mY - p2.mY) / (p1.mX - p2.mX);">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::ClipPoint(Vector2i, GraphicsAlgorithm::Boundary, Vector2i, Vector2i, Vector2i*, int*, Vector2i**, Vector2i*):GraphicsAlgorithm.cpp">
      </ContextState>
      <ContextState
         contextName = "Matrix::Matrix(int, int, std::__1::deque&lt;float, std::__1::allocator&lt;float&gt; &gt;):Matrix.cpp">
         <PersistentStrings>
            <PersistentString
               value = "mMatrix">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Polygon::GetVertices():Polygon.cpp">
         <PersistentStrings>
            <PersistentString
               value = "mVertices">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::InitScanLineValues(Line, float*):GraphicsAlgorithm.cpp">
         <PersistentStrings>
            <PersistentString
               value = "yMax">
            </PersistentString>
            <PersistentString
               value = "yMin">
            </PersistentString>
            <PersistentString
               value = "xVal">
            </PersistentString>
            <PersistentString
               value = "inverseSlope">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::LineDDA(Line):GraphicsAlgorithm.cpp">
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::PolyScanLine(Polygon):GraphicsAlgorithm.cpp">
         <PersistentStrings>
            <PersistentString
               value = "i">
            </PersistentString>
            <PersistentString
               value = "yMinCur">
            </PersistentString>
            <PersistentString
               value = "xVal">
            </PersistentString>
            <PersistentString
               value = "xMinCur">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Matrix::Multiply(Matrix):Matrix.cpp">
         <PersistentStrings>
            <PersistentString
               value = "mMatrix">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::DrawScanLine(int, std::__1::list&lt;GraphicsAlgorithm::ScanData, std::__1::allocator&lt;GraphicsAlgorithm::ScanData&gt; &gt;):GraphicsAlgorithm.cpp">
      </ContextState>
      <ContextState
         contextName = "GraphicsAlgorithm::LineDDA(Line, int, bool):GraphicsAlgorithm.cpp">
      </ContextState>
      <ContextState
         contextName = "Renderer::DrawScene():Renderer.cpp">
      </ContextState>
   </ContextStates>
</VariablesViewState>
